generator kysely {
    provider            = "prisma-kysely"
    output              = "./kysely"
    fileName            = "types.ts"
    decimalTypeOverride = "number"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Manufacturer {
    id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name            String           @db.VarChar(50)
    fullName        String?          @db.VarChar(30)
    memories        Memory[]
    mouses          Mouse[]
    processors      Processor[]
    sockets         Socket[]
    videoCardModels VideoCardModel[]
    videoCards      VideoCard[]
    createdAt       DateTime         @default(now())
    updatedAt       DateTime         @default(now())
}

model Memory {
    id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name           String?      @db.VarChar(30)
    model          String?      @db.VarChar(20)
    capacity       Int          @db.SmallInt
    info           MemoryInfo[]
    generation     String       @db.VarChar(4)
    type           String       @db.VarChar(6)
    chip           String?      @db.VarChar(10)
    manufacturerId String       @db.Uuid
    manufacturer   Manufacturer @relation(fields: [manufacturerId], references: [id])
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @default(now())
}

model MemoryInfo {
    id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    type      String?  @db.VarChar(13)
    clock     Int      @db.SmallInt
    tcl       Int?     @db.SmallInt
    trcd      Int?     @db.SmallInt
    trp       Int?     @db.SmallInt
    tras      Int?     @db.SmallInt
    voltage   Decimal? @db.Decimal(5, 4)
    memoryId  String   @db.Uuid
    memory    Memory   @relation(fields: [memoryId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model Mouse {
    id               String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    model            String       @db.VarChar(10)
    sensor           String?      @db.VarChar(8)
    maxDpi           Int          @db.SmallInt
    dpiSteps         Int[]        @db.SmallInt
    variableDpi      Boolean      @default(false)
    ips              Int?         @db.SmallInt
    buttons          Int?         @db.SmallInt
    weight           Int?         @db.SmallInt
    programmable     Boolean      @default(false)
    acceleration     Int?         @db.SmallInt
    wireless         Boolean      @default(false)
    wirelessType     String?      @db.VarChar(9)
    polling          Int[]        @default([125]) @db.SmallInt
    switch           String?      @db.VarChar(20)
    batteryCapacity  Int?         @db.SmallInt
    batteryLife      Int[]        @db.SmallInt
    chargingTime     Int?         @db.SmallInt
    chargingPort     String?      @db.VarChar(9)
    wirelessCharging String?      @db.VarChar(38)
    dimensions       Decimal[]    @db.Decimal(5, 2)
    manufacturerId   String       @db.Uuid
    manufacturer     Manufacturer @relation(fields: [manufacturerId], references: [id])
    createdAt        DateTime     @default(now())
    updatedAt        DateTime     @default(now())
}

model Processor {
    id               String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    model            String              @db.VarChar(10)
    codename         String?             @db.VarChar(17)
    architecture     String?             @db.VarChar(10)
    brand            String              @db.VarChar(22)
    socketId         String              @db.Uuid
    socket           Socket              @relation(fields: [socketId], references: [id])
    coreInfo         ProcessorCoreInfo[]
    l1Cache          Int?                @db.Integer
    l2Cache          Int?                @db.Integer
    l3Cache          Int                 @db.Integer
    litography       String              @db.VarChar(15)
    gpu              VideoCardModel?
    maxMemory        Int?                @db.SmallInt
    memoryChannels   Int                 @default(2) @db.SmallInt
    memorySpeed      Int[]               @db.SmallInt
    memoryGeneration String[]            @db.VarChar(4)
    usbPorts         ProcessorUsbInfo[]
    pcieVersion      String              @default("4.0") @db.VarChar(4)
    pcieLanes        Int[]               @db.SmallInt
    tdp              Int                 @db.SmallInt
    releaseDate      DateTime?           @db.Date
    msrp             Int?                @db.SmallInt
    manufacturerId   String              @db.Uuid
    manufacturer     Manufacturer        @relation(fields: [manufacturerId], references: [id])
    createdAt        DateTime            @default(now())
    updatedAt        DateTime            @default(now())
}

model ProcessorCoreInfo {
    id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    type        String?   @db.Char(2)
    coreCount   Int       @db.SmallInt
    threadCount Int       @db.SmallInt
    baseClock   Decimal   @db.Decimal(3, 1)
    boostClock  Decimal   @db.Decimal(3, 1)
    processorId String    @db.Uuid
    processor   Processor @relation(fields: [processorId], references: [id])
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @default(now())
}

model ProcessorUsbInfo {
    id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    type        String    @db.VarChar(15)
    amount      Int       @db.SmallInt
    processorId String    @db.Uuid
    processor   Processor @relation(fields: [processorId], references: [id])
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @default(now())
}

model Socket {
    id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name          String       @db.VarChar(10)
    alternateName String?      @db.VarChar(10)
    processors    Processor[]
    launchDate    DateTime?    @db.Date
    companyId     String       @db.Uuid
    company       Manufacturer @relation(fields: [companyId], references: [id])
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @default(now())
}

model VideoCard {
    id             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    modelId        String         @unique @db.Uuid
    model          VideoCardModel @relation(fields: [modelId], references: [id])
    ports          String[]       @db.VarChar(11)
    manufacturerId String?        @db.Uuid
    manufacturer   Manufacturer?  @relation(fields: [manufacturerId], references: [id])
    createdAt      DateTime       @default(now())
    updatedAt      DateTime       @default(now())
}

model VideoCardArchitecture {
    id                 String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name               String           @db.VarChar(12)
    fabricationProcess String[]         @db.VarChar(12)
    features           String[]         @db.VarChar
    launchDate         DateTime?        @db.Date
    videoCards         VideoCardModel[]
    createdAt          DateTime         @default(now())
    updatedAt          DateTime         @default(now())
}

model VideoCardClock {
    id        String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    type      String?        @db.VarChar(6) // ["Base", "Boost", "Memory", "Shader"]
    speed     Int            @db.SmallInt // MHz or MT/s
    modelId   String         @db.Uuid
    model     VideoCardModel @relation(fields: [modelId], references: [id])
    createdAt DateTime       @default(now())
    updatedAt DateTime       @default(now())
}

model VideoCardCore {
    id        String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    type      String         @db.VarChar(28) // ["AI accelerators", "Graphics processing clusters", "Pixel pipelines", "Ray accelerators", "Ray tracing cores", "Render output units", "Shader Processors", "Streaming multiprocessors", "Tensor Cores", "Texture mapping units"]
    amount    Int            @db.SmallInt
    modelId   String         @db.Uuid
    model     VideoCardModel @relation(fields: [modelId], references: [id])
    createdAt DateTime       @default(now())
    updatedAt DateTime       @default(now())
}

model VideoCardFlops {
    id        String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    type      String         @default("Single") @db.VarChar(11) // ["Half", "Single", "Double", "Tensor", "Ray Tracing"]
    amount    Decimal[]      @db.Decimal(15, 0) // [Base, Boost]
    modelId   String         @db.Uuid
    model     VideoCardModel @relation(fields: [modelId], references: [id])
    createdAt DateTime       @default(now())
    updatedAt DateTime       @default(now())
}

model VideoCardMemory {
    id        String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    size      Decimal        @db.Decimal(11, 0) // Bytes
    bandwidth Int            @db.Integer // Bytes
    busType   String         @db.VarChar(6)
    busWidth  Int            @db.SmallInt // Bit
    modelId   String         @unique @db.Uuid
    model     VideoCardModel @relation(fields: [modelId], references: [id])
    createdAt DateTime       @default(now())
    updatedAt DateTime       @default(now())
}

model VideoCardModel {
    id              String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name            String                @db.VarChar(25)
    series          String                @db.VarChar(14)
    codename        String?               @db.VarChar(10)
    architectureId  String                @db.Uuid
    architecture    VideoCardArchitecture @relation(fields: [architectureId], references: [id])
    busInterface    String?               @db.VarChar(16)
    transistors     Decimal?              @db.Decimal(12, 0) // Bytes // Full number
    dieSize         Int?                  @db.SmallInt // mm^2
    computeUnits    Int?                  @db.SmallInt
    cores           VideoCardCore[]
    clockSpeeds     VideoCardClock[]
    memory          VideoCardMemory?
    flops           VideoCardFlops[]
    multiGpuSupport Boolean               @default(false)
    tdp             Int?                  @db.SmallInt
    launchDate      DateTime?             @db.Date
    msrp            Json?                 @db.JsonB // { amount: number, currency: string}
    products        VideoCard[]
    processorId     String?               @unique @db.Uuid
    processor       Processor?            @relation(fields: [processorId], references: [id])
    companyId       String                @db.Uuid
    company         Manufacturer          @relation(fields: [companyId], references: [id])
    createdAt       DateTime              @default(now())
    updatedAt       DateTime              @default(now())
}
